name: CI Standard
# the action will run when ...
on:
  # ... manually triggered
  workflow_dispatch:
  # ... a commit is pushed to branch 'main'
  push:
    branches:
      - main
      - CI-standard
  # ... a commit is pushed to a PR
  pull_request:



env:
  CARGO_TERM_COLOR: always

jobs:

  # no cache needed for rustfmt
  formatBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cd backend && cargo fmt --all -- --check

  # no cache needed for cargo outdated
  outdatedBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cd backend && cargo outdated --exit-code 1

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: build
      - run: docker compose up -d

  clippy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: check
      - run: cd backend && cargo clippy --all-features --all-targets -- --deny clippy::all

  #  # we do not have any tests at this moment
  #  test:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v3
  #      - uses: Swatinem/rust-cache@v2
  #        with:
  #          prefix-key: cargo
  #          shared-key: test
  #      - run: cargo test --all-features --all-targets

  unused-dependenciesBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - run: cd backend && cargo udeps --all-targets

  # Check code formatting with Prettier
  formatFrontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
      - run: cd frontend && npm install
      - run: cd frontend && npx prettier --check "src/**/*.{js,jsx,ts,tsx,css,scss,html}"

  # Lint code with ESLint
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
      - run: cd frontend && npm install
      - run: cd frontend && npx eslint "src/**/*.{js,jsx,ts,tsx}"

  outdatedFrontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
      - run: cd frontend && npm install
      - run: cd frontend && npm outdated

  # Check for unused dependencies
  unused-dependenciesFrontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
      - run: cd frontend && npm install -g depcheck
      - run: cd frontend && depcheck


#  buildFrontend:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '20'
#      - run: cd frontend && npm install
#      - run: cd frontend && npm run build

  #    # we do not have any tests at this moment
  #    test:
  #      runs-on: ubuntu-latest
  #      steps:
  #        - uses: actions/checkout@v3
  #        - uses: actions/setup-node@v2
  #          with:
  #            node-version: '20'
  #        - run: npm install
  #        - run: npm test


