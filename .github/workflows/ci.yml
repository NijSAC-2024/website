name: CI Standard
# the action will run when ...
on:
  # ... manually triggered
  workflow_dispatch:
  # ... a commit is pushed to branch 'main'
  push:
    branches:
      - main
      - CI-standard
  # ... a commit is pushed to a PR
  pull_request:



env:
  CARGO_TERM_COLOR: always

jobs:
  # DB
  buildDB:
    runs-on: ubuntu-latest
    steps:
      - run: docker compose up db -d

  # Backend
  formatBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cd backend && cargo fmt --all -- --check

  outdatedBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cd backend && cargo outdated --exit-code 1

  buildBackend:
    runs-on: ubuntu-latest
    needs: buildDB
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: build
      - run: docker compose up backend -d

  clippy:
    runs-on: ubuntu-latest
    needs: buildBackend
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: check
      - run: cd backend && cargo clippy --all-features --all-targets -- --deny clippy::all

  unused-dependenciesBackend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - run: cd backend && cargo udeps --all-targets

  # Frontend
  formatFrontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: cd frontend && npm install
      - run: cd frontend && npx prettier --check "src/**/*.{js,jsx,ts,tsx,css,scss,html}"

  # Lint code with ESLint
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: cd frontend && npm install
      - run: cd frontend && npx eslint "src/**/*.{js,jsx,ts,tsx}"

  buildFrontend:
    runs-on: ubuntu-latest
    needs: [buildDB, buildBackend]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - run: docker compose up frontend -d

  outdatedFrontend:
    runs-on: ubuntu-latest
    needs: buildFrontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: cd frontend && npm outdated

  # Check for unused dependencies
  unused-dependenciesFrontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: cd frontend && npm install -g depcheck
      - run: cd frontend && depcheck

