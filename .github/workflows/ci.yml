name: Checks

permissions:
  contents: read

on:
  pull_request:


jobs:
  build-backend:
    name: Build and test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          toolchain: stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@e523301c9af289ba196edd3ab08abdece06107d2 # v2.46.9
        with:
          tool: cargo-llvm-cov

      - name: Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Setup Postgres DB
        working-directory: backend
        run: |
          docker compose up db --wait && \
          cargo install sqlx-cli --no-default-features --features rustls,postgres && \
          cargo sqlx migrate run --source migrations

      - name: cargo build
        working-directory: backend
        run: cargo build

      - name: cargo test
        working-directory: backend
        run: cargo llvm-cov --lcov --output-path lcov.info
        env:
          RUST_BACKTRACE: 1

      - name: Bring Postgres DB down
        run: docker compose down

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@7f8b4b4bde536c465e797be725718b88c5d95e0e # v5.1.1
        with:
          files: lcov.info
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  unused-backend:
    name: Check unused cargo dependencies
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          toolchain: nightly

      - name: Install udeps
        uses: taiki-e/install-action@e523301c9af289ba196edd3ab08abdece06107d2 # v2.46.9
        with:
          tool: cargo-udeps

      - name: cargo udeps
        working-directory: backend
        run: cargo udeps --workspace --all-targets

  format-backend:
    name: Format Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        working-directory: backend
        run: cargo +nightly fmt --all --check -- --config imports_granularity="Crate"

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@a54c7afa936fefeb4456b2dd8068152669aa8203
        with:
          toolchain: stable
          components: clippy

      - name: Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Run clippy
        working-directory: backend
        run: cargo clippy --all-targets --all-features -- -D warnings


  audit-dependencies-backend:
    name: Audit Rust dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: EmbarkStudios/cargo-deny-action@e2f4ede4a4e60ea15ff31bc0647485d80c66cfba
        with:
          manifest-path: backend/Cargo.toml
          arguments: --workspace --all-features

  # Frontend
  lint-frontend:
    name: Format and lint frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # 4.1.0
        with:
          node-version: '20'
      - name: prettier
        working-directory: frontend
        run: |
          npm install
          npx prettier --check "src/**/*.{js,jsx,ts,tsx,css,scss,html}"
          npx eslint "src/**/*.{js,jsx,ts,tsx}"

  outdated-frontend:
    runs-on: ubuntu-latest
    name: Check for outdated or unused frontend dependencies
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # 4.1.0
        with:
          node-version: '20'
      - working-directory: frontend
        run: |
          npm install
          npm outdated
          npm install -g depcheck
          depcheck --ignores=eslint-config-react-app
